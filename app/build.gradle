plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "kotlin-android-extensions"
    id 'kotlin-kapt'
    id 'com.akaita.android.easylauncher'
    id 'io.fabric'
    id 'androidx.navigation.safeargs.kotlin'
}

def keystorePropertiesFile = rootProject.file("secret.properties")
def keystoreProperties = new Properties()

android {
    compileSdkVersion 29
    signingConfigs {
        if (keystorePropertiesFile.exists()) {
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    defaultConfig {
        applicationId "at.florianschuster.watchables"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 45
        versionName "1.0.12"
        vectorDrawables.useSupportLibrary = true
        setProperty("archivesBaseName", "Watchables-v$versionName-b$versionCode")


        resValue "string", "app_name", "Watchables"
        buildConfigField "String", "MOVIEDB_BASE_URL", "\"https://api.themoviedb.org/3/\""
        buildConfigField "String", "MOVIEDB_POSTER_THUMBNAIL", "\"https://image.tmdb.org/t/p/w342\""
        buildConfigField "String", "MOVIEDB_POSTER_ORIGINAL", "\"https://image.tmdb.org/t/p/original\""


        if (keystorePropertiesFile.exists()) {
            buildConfigField "String", "MOVIEDB_KEY", keystoreProperties['tmdbKey']
        }
    }
    buildTypes {
        release {
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = false
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    packagingOptions {
        exclude 'META-INF/library-core_release.kotlin_module'
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation Libs.kotlin_stdlib_jdk7

    /**
     * Base
     */
    implementation Libs.reaktor_android_koin
    implementation Libs.koordinator_android_koin

    implementation Libs.util_ui
    implementation Libs.util_async
    implementation Libs.util_network
    implementation Libs.util_optional
    implementation Libs.util_permissions
    implementation Libs.util_validation
    implementation Libs.util_viewstate
    implementation Libs.util_firebase

    /**
     * UI
     */
    implementation Libs.appcompat
    implementation Libs.material
    implementation Libs.fragment
    implementation Libs.constraintlayout
    implementation Libs.core_ktx

    implementation Libs.navigation_ui_ktx
    implementation Libs.navigation_fragment_ktx

    implementation Libs.lifecycle_extensions
    kapt Libs.lifecycle_compiler

    /**
     * Dependency Injection
     */
    implementation Libs.koin_core
    implementation Libs.koin_android
    implementation Libs.koin_androidx_scope
    implementation Libs.koin_androidx_viewmodel

    /**
     * Networking
     */
    implementation Libs.retrofit
    implementation Libs.converter_gson
    implementation Libs.adapter_rxjava2
    implementation Libs.okhttp
    implementation Libs.logging_interceptor

    /**
     * Local
     */
    implementation Libs.hawk

    /**
     * QR
     */
    implementation Libs.com_google_zxing_core
    implementation Libs.zxing_android_embedded

    /**
     * Google
     */
    implementation Libs.com_google_android_play_core
    implementation Libs.play_services_auth

    /**
     * Firebase
     */
    implementation Libs.firebase_core
    implementation Libs.firebase_auth
    implementation Libs.firebase_firestore
    implementation Libs.crashlytics
    implementation Libs.firebase_messaging
    implementation Libs.firebase_perf
    implementation Libs.firebase_dynamic_links

    /**
     * Rx
     */
    implementation Libs.rxjava
    implementation Libs.rxkotlin
    implementation Libs.rxrelay
    implementation Libs.rxandroid

    implementation Libs.rxbinding
    implementation Libs.rxbinding_core
    implementation Libs.rxbinding_appcompat
    implementation Libs.rxbinding_recyclerview
    implementation Libs.rxbinding_material

    /**
     * Utils
     */
    debugImplementation Libs.leakcanary_android
    implementation Libs.aboutlibraries
    implementation Libs.customtabs
    implementation Libs.flick
    implementation Libs.gesture_views
    implementation Libs.glide
    implementation Libs.glide_transformations
    implementation Libs.gson
    implementation Libs.rxpermissions
    implementation Libs.shimmer
    implementation Libs.threetenabp
    implementation Libs.timber
    implementation Libs.work_runtime
    implementation Libs.work_rxjava2
    kapt Libs.com_github_bumptech_glide_compiler

    testImplementation Libs.junit
    testImplementation Libs.mockk
    testImplementation Libs.koin_test
}


easylauncher {
    iconNames "@mipmap/ic_launcher_foreground"
    foregroundIconNames "@mipmap/ic_launcher_foreground"

    defaultFlavorNaming = true

    //For customization see: https://github.com/akaita/easylauncher-gradle-plugin#usage.
    buildTypes {
        debug {
            filters = customColorRibbonFilter("debug", "#ffffff", "#47BAF2")
        }
        release {}
    }
}

apply plugin: 'com.google.gms.google-services'
