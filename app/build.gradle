apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-android-extensions"
apply plugin: 'kotlin-kapt'
apply plugin: 'com.akaita.android.easylauncher'
apply plugin: 'io.fabric'
apply plugin: 'androidx.navigation.safeargs.kotlin'

def keystorePropertiesFile = rootProject.file("secret.properties")
def keystoreProperties = new Properties()

android {
    compileSdkVersion 28
    signingConfigs {
        if (keystorePropertiesFile.exists()) {
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    defaultConfig {
        applicationId "at.florianschuster.watchables"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 18
        versionName "1.0.8"
        vectorDrawables.useSupportLibrary = true
        setProperty("archivesBaseName", "Watchables-v$versionName-b$versionCode")


        resValue "string", "app_name", "Watchables"
        buildConfigField "String", "MOVIEDB_BASE_URL", "\"https://api.themoviedb.org/3/\""
        buildConfigField "String", "MOVIEDB_POSTER_THUMBNAIL", "\"https://image.tmdb.org/t/p/w342\""
        buildConfigField "String", "MOVIEDB_POSTER_ORIGINAL", "\"https://image.tmdb.org/t/p/original\""


        if (keystorePropertiesFile.exists()) {
            buildConfigField "String", "MOVIEDB_KEY", keystoreProperties['tmdbKey']
        }
    }
    buildTypes {
        release {
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = false
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}


androidExtensions {
    experimental = true
}


dependencies {
    /**
     * Base
     */
    implementation deps.reaktor.values()
    implementation deps.koordinator.values()
    implementation deps.androidutil.values()

    /**
     * UI
     */
    implementation deps.ui.values()
    implementation deps.lifecycle.extensions
    kapt deps.lifecycle.compiler
    implementation deps.navigation.values()

    /**
     * Dependency Injection
     */
    implementation deps.koin.values()

    /**
     * Networking
     */
    implementation deps.networking.values()

    /**
     * Local
     */
    implementation deps.local.hawk

    /**
     * Firebase
     */
    implementation deps.firebase.values()

    /**
     * Rx
     */
    implementation deps.rxjava.values()
    implementation deps.rxbinding.values()

    /**
     * Utils
     */
    implementation deps.coreutil.values()
    debugImplementation deps.leakcanary.op
    releaseImplementation deps.leakcanary.noop
    implementation deps.glide.core
    implementation deps.glide.transformation
    kapt deps.glide.compiler
    implementation deps.work.values()
}


easylauncher {
    iconNames "@mipmap/ic_launcher_foreground"
    foregroundIconNames "@mipmap/ic_launcher_foreground"

    defaultFlavorNaming = true

    //For customization see: https://github.com/akaita/easylauncher-gradle-plugin#usage.
    buildTypes {
        debug {
            filters = customColorRibbonFilter("debug", "#ffffff", "#47BAF2")
        }
        release {}
    }
}

apply plugin: 'com.google.gms.google-services'
